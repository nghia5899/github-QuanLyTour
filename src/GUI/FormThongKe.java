/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.ThongKeBLL;
import com.toedter.calendar.JCalendar;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import DAO.DataProvider;
import DAO.ThongKeDAO;
import java.io.*;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JTable;

/**
 *
 * @author chubo
 */
public class FormThongKe extends javax.swing.JFrame {

    DefaultComboBoxModel cbmodel;
    DefaultTableModel model;
    String diadiem, matour, tungay, denngay;

    /**
     * dcDenNgay.setEnabled(false);
     *
     * Creates new form FormThongKe
     */
    public FormThongKe() {
        initComponents();
        setLocationRelativeTo(this);
        getlistdiadiem();
        // lấy List địa điểm từ base và truyền vào cb box, ko hiểu sao nó báo "unchecked or unsafe operations." hoạt động ko an toàn????
  
        dcTuNgay.setEnabled(false);
        dcDenNgay.setEnabled(false);
        java.sql.Date date = new java.sql.Date(System.currentTimeMillis());
        dcTuNgay.setDate(date);
        dcDenNgay.setDate(date);
        // set time mặc định và đặt mặc định là Unabled để lấy toàn bộ dữ liệu từ ngày đầu tiên đến nay

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaTour = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbDiaDiem = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnLoc = new javax.swing.JButton();
        btnXuat = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTongThu = new javax.swing.JTextField();
        dcTuNgay = new com.toedter.calendar.JDateChooser();
        dcDenNgay = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        lbKQ = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("THỐNG KÊ");

        jLabel3.setText("Mã Tour");

        jLabel4.setText("Từ Ngày");

        jLabel6.setText("Địa Điểm");

        cbDiaDiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        table.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Khách", "Tên Khách", "SĐT Khách", "Mã Tour", "Địa Điểm", "Ngày Khởi Hành", "Thời Gian Tour", "Tổng Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(6).setResizable(false);
            table.getColumnModel().getColumn(7).setResizable(false);
        }

        btnLoc.setText("Lọc");
        btnLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocActionPerformed(evt);
            }
        });

        btnXuat.setText("Xuất");
        btnXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatActionPerformed(evt);
            }
        });

        jLabel2.setText("Tổng Thu");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txtTongThu, org.jdesktop.beansbinding.ELProperty.create("false"), txtTongThu, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        dcTuNgay.setDateFormatString("yyyy-MM-dd");

        dcDenNgay.setDateFormatString("yyyy-MM-dd");

        jLabel7.setText("Đến Ngày");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Bỏ Qua Điều Kiện Ngày");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        lbKQ.setText("Kết Quả Theo: ");

        jButton1.setText("Quay lại");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(386, 386, 386))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(btnXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMaTour, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbDiaDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcTuNgay, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                        .addGap(246, 246, 246)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcDenNgay, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                                    .addComponent(lbKQ, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTongThu, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(89, 89, 89)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMaTour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(cbDiaDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(dcDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(dcTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTongThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(lbKQ)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean settingngay() {
        if (jCheckBox1.isSelected()) {
            dcTuNgay.setEnabled(false);
            dcDenNgay.setEnabled(false);
            return false;
        } else {
            dcTuNgay.setEnabled(true);
            dcDenNgay.setEnabled(true);
            return true;
        }
    }

    private void getlistdiadiem() {
        ArrayList<String> listdiadiem = ThongKeBLL.getInstance().list("diadiem", "Select distinct diadiem from tour");
        cbmodel = new DefaultComboBoxModel();
        for (int i = 0; i < listdiadiem.size(); i++) {
            cbmodel.addElement(listdiadiem.get(i));
        }
        cbDiaDiem.setModel(cbmodel);
    }

    private int checkvalidate(String tencot, String sql, String tenfield) {
        int check = 0;
        ArrayList<String> list = ThongKeBLL.getInstance().list(tencot, sql);
        for (int i = 0; i < list.size(); i++) {
            if (tenfield.equals(list.get(i))) {
                check++;
            }
        }
        return check;
    }

    private boolean check(String dieukien, String matour, String diadiem) {
        String sql = "Select * From khachhang inner join tourdabook on khachhang.makhachhang=tourdabook.makhachhang inner join tour on tour.matour = tourdabook.matour ";
        if (checkvalidate("matour", sql, matour) > 0 && checkvalidate("diadiem", sql, diadiem) > 0 && checkvalidate("matour", dieukien, matour) == 0 && checkvalidate("diadiem", dieukien, diadiem) == 0) {
            JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " từ điểm " + diadiem + " đã từng được book nhưng không có trong khoảng thời gian này");
            return false;
        } else if (checkvalidate("matour", sql, matour) > 0 && checkvalidate("diadiem", sql, diadiem) == 0 && checkvalidate("matour", dieukien, matour) == 0 && checkvalidate("diadiem", dieukien, diadiem) == 0) {
            JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " đã từng được book nhưng chưa có từ điểm " + diadiem);
            return false;
        } else if (checkvalidate("matour", sql, matour) == 0 && checkvalidate("diadiem", sql, diadiem) > 0 && checkvalidate("matour", dieukien, matour) == 0 && checkvalidate("diadiem", dieukien, diadiem) == 0) {
            JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " chưa từng được book");
            return false;
        } else if (checkvalidate("diadiem", sql, diadiem) == 0 && checkvalidate("diadiem", dieukien, diadiem) == 0) {
            JOptionPane.showMessageDialog(rootPane, "Địa điểm " + diadiem + " chưa từng được book");
            return false;
        } else {
            return true;
        }
    }

    private void hienthithongke(ResultSet rs) {
        model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        int TongTien = 0, TongThu = 0;
        try {
            while (rs.next()) {
                TongTien = rs.getInt("songuoilon") * rs.getInt("giatour") + rs.getInt("sotreem") * rs.getInt("giatour");
                TongThu += TongTien;
                Object[] s = {rs.getString("makhachhang"), rs.getString("tenkhachhang"), rs.getInt("sodienthoai"), rs.getString("matour"), rs.getString("diadiem"), rs.getString("ngaykhoihanh"), rs.getString("thoigiantour"), TongTien};
                model.addRow(s);
            }
            txtTongThu.setText(Integer.toString(TongThu));
        } catch (SQLException ex) {
            Logger.getLogger(FormThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void thongke() {
        ResultSet rs = null;
        model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        diadiem = cbDiaDiem.getSelectedItem().toString();
        matour = txtMaTour.getText();
        tungay = new SimpleDateFormat("yyyy-MM-dd").format(dcTuNgay.getDate());
        denngay = new SimpleDateFormat("yyyy-MM-dd").format(dcDenNgay.getDate());
        //get dữ liệu từ các trường nhập sang biến string        

        String sql = "Select * From khachhang inner join tourdabook on khachhang.makhachhang=tourdabook.makhachhang inner join tour on tour.matour = tourdabook.matour ";
        String dieukien1 = "where tour.diadiem = '" + diadiem + "' AND ngaykhoihanh BETWEEN '" + tungay + "' AND '" + denngay + "' ";
        String dieukien2 = "where tour.diadiem = '" + diadiem + "' ";
        String dieukien3 = "where tour.diadiem = '" + diadiem + "' AND tourdabook.matour= '" + matour + "' AND ngaykhoihanh BETWEEN '" + tungay + "' AND '" + denngay + "' ";
        String dieukien4 = "where tour.diadiem = '" + diadiem + "' AND tourdabook.matour= '" + matour + "' ";
        // thiết lập câu lệnh để get dữ liệu từ base + các điều kiện tự động ăn theo việc nhập liệu của người admin

        if (matour.equals("")) {    //1.
            if (settingngay()) {    // 1.trường hợp ko mã, có ngày
                lbKQ.setText("Kết Quả Theo: Tất cả tour từ địa điểm " + diadiem + ", từ ngày " + tungay + " đến ngày " + denngay + " :");
                System.out.println("Thực Thi:\n " + sql + dieukien1);
                                    //trình bày + hiển thị thực thi
                rs = ThongKeBLL.getInstance().thongke(sql + dieukien1);
                if(check(sql+dieukien1, matour, diadiem)){
                    hienthithongke(rs);
                }
//                if ((checkvalidate("diadiem", sql, diadiem) > 0 && checkvalidate("diadiem", sql + dieukien1, diadiem) == 0) || (checkvalidate("diadiem", sql, diadiem) == 0 && checkvalidate("diadiem", sql + dieukien1, diadiem) == 0)) {
//                    JOptionPane.showMessageDialog(rootPane, "Chưa có từng có tour nào từ điểm " + diadiem + " được book từ ngày " + tungay + " đến ngày " + denngay);
//                } else {
//                    hienthithongke(rs);
//                }

            } else {                // 2.trường hợp ko mã, ko ngày
                lbKQ.setText("Kết Quả Theo: Tất cả tour từ địa điểm " + diadiem + ", từ trước tới giờ :");
                System.out.println("Thực Thi:\n " + sql + dieukien2);
                rs = ThongKeBLL.getInstance().thongke(sql + dieukien2);
                                    //trình bày + hiển thị thực thi
                rs = ThongKeBLL.getInstance().thongke(sql + dieukien2);
                if(check(sql+dieukien2, matour, diadiem)){
                    hienthithongke(rs);
                }
//                if (checkvalidate("diadiem", sql, diadiem) > 0 && checkvalidate("diadiem", sql + dieukien1, diadiem) == 0) {
//                    JOptionPane.showMessageDialog(rootPane, "Chưa có từng có tour nào từ điểm " + diadiem + " được book từ trước tới giờ");
//                } else {
//                    hienthithongke(rs);
//                }
            }
        } else {                    // 3.
            if (settingngay()) {    // 3.trường hợp có mã, có ngày
                lbKQ.setText("Kết Quả Theo: Tour " + matour + " được book từ điểm " + diadiem + ", từ ngày " + tungay + " đến ngày " + denngay + " :");
                System.out.println("Thực Thi:\n " + sql + dieukien3);
                rs = ThongKeBLL.getInstance().thongke(sql + dieukien3);
                                    //trình bày + hiển thị thực thi
                rs = ThongKeBLL.getInstance().thongke(sql + dieukien3);
                if(check(sql+dieukien3, matour, diadiem)){
                    hienthithongke(rs);
                }
//                if (checkvalidate("matour", sql + dieukien3, matour) == 0 && checkvalidate("diadiem", sql, diadiem) > 0) {
//                    JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " chưa từng được book từ điểm " + diadiem + ", từ ngày " + tungay + " đến ngày " + denngay);
//                } else if (checkvalidate("matour", sql, matour) > 0 && checkvalidate("diadiem", sql, diadiem) > 0 && checkvalidate("matour", sql + dieukien3, matour) == 0 && checkvalidate("diadiem", sql + dieukien3, diadiem) == 0) {
//                    JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " từ điểm " + diadiem + " đã từng được book, nhưng ko phải từ ngày " + tungay + " đến ngày " + denngay);
//                } else if (checkvalidate("matour", sql + dieukien3, matour) == 0 && checkvalidate("diadiem", sql + dieukien3, diadiem) == 0) {
//                    JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " từ điểm " + diadiem + " chưa từng được book, từ ngày " + tungay + " đến ngày " + denngay);
//                } else {
//                    hienthithongke(rs);
//                }
            } else {                // 4.trường hợp có mã, ko ngày
                lbKQ.setText("Kết Quả Theo: Tour " + matour + " được book từ điểm " + diadiem + ", từ trước đến nay");
                System.out.println("Thực Thi:\n " + sql + dieukien4);
                rs = ThongKeBLL.getInstance().thongke(sql + dieukien4);
                                    //trình bày + hiển thị thực thi
                rs = ThongKeBLL.getInstance().thongke(sql + dieukien4);
                if(check(sql+dieukien4, matour, diadiem)){
                    hienthithongke(rs);
                }
//                if (checkvalidate("matour", sql, matour) > 0 && checkvalidate("diadiem", sql, diadiem) == 0 && checkvalidate("diadiem", sql + dieukien3, diadiem) == 0 && checkvalidate("matour", sql + dieukien3, matour) == 0) {
//                    JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " đã từng được book nhưng ko phải từ điểm " + diadiem + ", từ trước đến nay");
//                } else if (checkvalidate("matour", sql, matour) == 0 && checkvalidate("diadiem", sql, diadiem) > 0 && checkvalidate("diadiem", sql + dieukien3, diadiem) == 0 && checkvalidate("matour", sql + dieukien3, matour) == 0) {
//                    JOptionPane.showMessageDialog(rootPane, "Tour " + matour + " chưa từng được book từ điểm " + diadiem + ", từ trước đến nay");
//                } else if (checkvalidate("matour", sql, matour) == 0 && checkvalidate("diadiem", sql, diadiem) == 0 && checkvalidate("diadiem", sql + dieukien3, diadiem) == 0 && checkvalidate("matour", sql + dieukien3, matour) == 0) {
//                    JOptionPane.showMessageDialog(rootPane, "Cả Tour " + matour + " và địa điểm " + diadiem + " chưa từng được book, từ trước đến nay");
//                } else {
//                    hienthithongke(rs);
//                }
            }
        }
    }
    private void btnLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocActionPerformed
        thongke();
    }//GEN-LAST:event_btnLocActionPerformed

    private void btnXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int i = chooser.showSaveDialog(chooser);
        if (i == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            try {
                FileOutputStream fileOutputStream = new FileOutputStream(file+".txt");
                Writer writer = new java.io.OutputStreamWriter(fileOutputStream, "utf8");
                BufferedWriter bwrite = new BufferedWriter(writer);
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                // ten Cot
                for (int j = 0; j < table.getColumnCount(); j++) {
                    bwrite.write(model.getColumnName(j) + "\t");
                }
                bwrite.write("\n");
                // Lay du lieu dong
                for (int j = 0; j < table.getRowCount(); j++) {
                    for (int k = 0; k < table.getColumnCount(); k++) {
                        bwrite.write(model.getValueAt(j, k) + "\t");
                    }
                    bwrite.write("\n");
                }
                bwrite.close();
                JOptionPane.showMessageDialog(null, "Lưu file thành công!");
            } catch (Exception e2) {
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu file!");
            }
        }
    }//GEN-LAST:event_btnXuatActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        settingngay();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new FormGIaoDienAdmin().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoc;
    private javax.swing.JButton btnXuat;
    private javax.swing.JComboBox<String> cbDiaDiem;
    private com.toedter.calendar.JDateChooser dcDenNgay;
    private com.toedter.calendar.JDateChooser dcTuNgay;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbKQ;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtMaTour;
    private javax.swing.JTextField txtTongThu;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
